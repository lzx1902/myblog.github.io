<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[解析Cron表达式]]></title>
    <url>%2Fmyblog.github.io%2F2020%2F06%2F08%2F%E8%A7%A3%E6%9E%90Cron%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[解析Cron表达式，转换为时间 背景：当需要知道计划任务配置的执行时间，想要清楚的知道下次执行是什么时候，需要解析计划任务的Cron表达式，本次主要介绍quartz.CronExpression提供的解析Cron的方法，注：资源来源网络 1、Cron表达式定义 定义： Cron表达式被用于设置周期性被执行的指令，通常是使用特定的调度去读取并解析它，然后在特定的时间去执行某个计划任务 123456789101112131415Cron表达式是一个字符串，字符串以5或6个空格隔开，分为6或7个域，每一个域代表一个含义，Cron有如下两种语法格式：1、Seconds Minutes Hours DayofMonth Month DayofWeek Year2、Seconds Minutes Hours DayofMonth Month DayofWeek 字段 允许值 允许的特殊字符 秒 0-59 , - * / 分 0-59 , - * / 小时 0-23 , - * / 日期 1-31 , - * ? / L W C 月份 1-12 或者 JAN-DEC , - * / 星期 1-7 或者 SUN-SAT , - * ? / L C *#* 年（可选） 留空, 1970-2099 , - * / 具体实例参考第四点【Cron表达式实例】 2、引入quartz.CronExpression解析1import org.quartz.CronExpression; // jar包或者maven依赖 引入quartz.CronExpression来做解析，利用强大的quartz提供的方法来解析Cron，然后去定我们所要求的格式 注意，利用date的转换不够全面，只能解析一些简单的Cron表达式 3、解析实例12345678910111213141516171819202122232425262728public class CronUtils &#123; /** * 根据 Cron表达式和开始时间，得到下次执行时间 * * @param cron * @param startDate * @return */ public static Date getNextExecuteTime(String cron, Date startDate) &#123; try &#123; CronExpression cronExpression = new CronExpression(cron); return cronExpression.getNextValidTimeAfter(startDate == null ? new Date() : startDate); &#125; catch (ParseException e) &#123; throw new IllegalArgumentException("无效的cron表达式:" + cron, e); &#125; &#125; &#125;// 如new Date() = 2020-05-30 16:50:00 ，Cron = "0 54 0/1 * * ?",表示每小时的54分钟时会执行一次Date nextExecuteTime = CronUtils.getNextExecuteTime("0 54 0/1 * * ?", new Date());// 设置解析格式为"yyyy-MM-dd HH:mm:ss"DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");if (nextExecuteTime !=null ) &#123; String nextRunTime = dateFormat.format(nextExecuteTime);&#125;// 则得到下次运行时间： nextRunTime = "2020-05-30 16:54:00" ###4、Cron表达式实例 12345678910111213141516171819表达式以及含义 &quot;0 0 12 * * ?&quot; 每天中午12点触发 &quot;0 20 20 ? * *&quot; 每天20:20触发 &quot;0 20 20 * * ?&quot; 每天20:20触发 &quot;0 20 20 * * ? *&quot; 每天20:20触发 &quot;0 20 20 * * ? 2020&quot; 2020年的每天20:20触发 &quot;0 0/5 14 * * ?&quot; 在每天14点到14:55期间的每5分钟触发 &quot;0 0/5 14,18 * * ?&quot; 在每天14点到14:55期间和18点到18:55期间的每5分钟触发 &quot;0 0-5 14 * * ?&quot; 在每天每天14点到14点:05期间的每1分钟触发 &quot;0 10,44 14 ? 3 WED&quot; 每年三月的星期三的14:10和14:44触发 &quot;0 15 10 ? * MON-FRI&quot; 周一至周五的上午10:15触发 &quot;0 15 10 15 * ?&quot; 每月15日上午10:15触发 &quot;0 15 10 L * ?&quot; 每月最后一日的上午10:15触发 &quot;0 15 10 ? * 6L&quot; 每月的最后一个星期五上午10:15触发 &quot;0 6 * * *&quot; 每天早上6点 &quot;0 */2 * * *&quot; 每两个小时 &quot;0 23-7/2，8 * * * &quot; 晚上11点到早上8点之间每两个小时，早上八点 &quot;0 11 4 * 1-3 &quot; 每个月的4号和每个礼拜的礼拜一到礼拜三的早上11点 &quot;0 4 1 1 &quot; 1月1日早上4点]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客Next主题添加DaoVoice在线联系]]></title>
    <url>%2Fmyblog.github.io%2F2019%2F11%2F17%2FHexo-Daovoice%2F</url>
    <content type="text"><![CDATA[转载自： http://www.aomanhao.top/2019/05/18/Hexo_Daovoice/ Hexo博客Next主题DaoVoice实现在线联系 注册登录DaoVoice注册地址如下:http://www.daovoice.io/ 在官网注册帐号需要邀请码，可以输入我的邀请码 b69005f1 复制粘贴代码修改的hexo的文件路劲如下: 博客/themes/next/layout/_partials/head/head.swig 末尾添加下面的代码: 复制 1&#123;% if theme.daovoice %&#125; &lt;script&gt;(function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/b6dbddb6.js&quot;,&quot;daovoice&quot;) daovoice(&apos;init&apos;, &#123; app_id: &quot;用户ID&quot;&#125;);daovoice(&apos;update&apos;); &lt;/script&gt;&#123;% endif %&#125; 用户ID需要自行填写，查找的的位置在下图片中显示出来了 修改主题配置文件在Next主题的配置文件博客/themes/next/_config.yml末尾中添加用户ID: 复制 1daovoice: truedaovoice_app_id: 用户ID 修改聊天图标等设置应用设置—聊天设置，然后定制欢迎辞，设置聊天窗口样式等 部署Daovoice清理缓存，生成缓存，部署服务 复制 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 登陆本地服务：http://localhost:4000/，可以看到Daovoice已经成功运行。 DaoVoice官网会提示，服务接入成功 本文作者： AomanHao 本文链接： http://www.aomanhao.top/2019/05/18/Hexo_Daovoice/ 版权声明： 本博客所有文章除特别声明外，均采用 BY-NC-SA 许可协议。转载请注明出处！]]></content>
      <categories>
        <category>Next</category>
      </categories>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown基本语法]]></title>
    <url>%2Fmyblog.github.io%2F2019%2F11%2F13%2FMarkdown%2F</url>
    <content type="text"><![CDATA[转载自： https://www.mdeditor.com/ Markdown基本语法解释以及在线Markdown编辑器MdEditor Markdown是一种轻量级的「标记语言」 Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面，Markdown文件的后缀名便是“.md” MdEditor是一个在线编辑Markdown文档的编辑器MdEditor扩展了Markdown的功能（如表格、脚注、内嵌HTML等等），以使让Markdown转换成更多的格式，和更丰富的展示效果，这些功能原初的Markdown尚不具备。 Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc，Pandao；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。 MdEditor源于Pandao的JavaScript开源项目，开源地址Editor.md，并在MIT开源协议的许可范围内进行了优化，以适应广大用户群体的需求。向优秀的markdown开源编辑器原作者Pandao致敬。 MdEditor的功能列表演示标题H1标题H2标题H3标题H4标题H5标题H5字符效果和横线等 删除线 删除线（开启识别HTML标签时） 斜体字 斜体字 粗体 粗体 粗斜体 粗斜体 上标：X2，下标：O2 缩写(同HTML的abbr标签) 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启 The HTML specification is maintained by the W3C. 引用 Blockquotes 引用文本 Blockquotes 引用的行内混合 Blockquotes 引用：如果想要插入空白换行即&lt;br /&gt;标签，在插入处先键入两个以上的空格然后回车即可，普通链接。 锚点与链接 Links普通链接普通链接带标题直接链接：https://www.mdeditor.com[锚点链接][anchor-id][anchor-id]: https://www.mdeditor.com/mailto:test.test@gmail.comGFM a-tail link @pandao邮箱地址自动链接 test.test@gmail.com www@vip.qq.com @pandao 多语言代码高亮 Codes行内代码 Inline code执行命令：npm install marked 缩进风格即缩进四个空格，也做为实现类似 &lt;pre&gt; 预格式化文本 ( Preformatted Text ) 的功能。 &lt;?php echo &quot;Hello world!&quot;; ?&gt;预格式化文本： | First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |JS代码123function test() &#123; console.log("Hello world!");&#125; HTML 代码 HTML codes1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;mate charest="utf-8" /&gt; &lt;meta name="keywords" content="Editor.md, Markdown, Editor" /&gt; &lt;title&gt;Hello world!&lt;/title&gt; &lt;style type="text/css"&gt; body&#123;font-size:14px;color:#444;font-family: "Microsoft Yahei", Tahoma, "Hiragino Sans GB", Arial;background:#fff;&#125; ul&#123;list-style: none;&#125; img&#123;border:none;vertical-align: middle;&#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 class="text-xxl"&gt;Hello world!&lt;/h1&gt; &lt;p class="text-green"&gt;Plain text&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 图片 Images图片加链接 (Image + Link)： Follow your heart. 列表 Lists无序列表（减号）Unordered Lists (-) 列表一 列表二 列表三 无序列表（星号）Unordered Lists (*) 列表一 列表二 列表三 无序列表（加号和嵌套）Unordered Lists (+) 列表一 列表二 列表二-1 列表二-2 列表二-3 列表三 列表一 列表二 列表三 有序列表 Ordered Lists (-) 第一行 第二行 第三行 GFM task list GFM task list 1 GFM task list 2 GFM task list 3 GFM task list 3-1 GFM task list 3-2 GFM task list 3-3 GFM task list 4 GFM task list 4-1 GFM task list 4-2 绘制表格 Tables 项目 价格 数量 计算机 $1600 5 手机 $12 12 管线 $1 234 First Header Second Header Content Cell Content Cell Content Cell Content Cell First Header Second Header Content Cell Content Cell Content Cell Content Cell Function name Description help() Display the help window. destroy() Destroy your computer! Left-Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 Item Value Computer $1600 Phone $12 Pipe $1 特殊符号 HTML Entities Codes&copy; &amp; &uml; &trade; &iexcl; &pound;&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; X&sup2; Y&sup3; &frac34; &frac14; &times; &divide; &raquo; 18&ordm;C &quot; &apos; [========] Emoji表情 :smiley: Blockquotes :star: GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x: :smiley: @mentions, :smiley: #refs, links, formatting, and tags supported :editormd-logo:; list syntax required (any unordered or ordered list supported) :editormd-logo-3x:; [ ] :smiley: this is a complete item :smiley:; []this is an incomplete item test link :fa-star: @pandao; [ ]this is an incomplete item :fa-star: :fa-gear:; :smiley: this is an incomplete item test link :fa-star: :fa-gear:; :smiley: this is :fa-star: :fa-gear: an incomplete item test link; 反斜杠 Escape*literal asterisks* [========] 科学公式 TeX(KaTeX)$$E=mc^2$$ 行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。 $$x &gt; y$$ $$(\sqrt{3x-1}+(1+x)^2)$$ $$\sin(\alpha)^{\theta}=\sum_{i=0}^{n}(x^i + \cos(f))$$ 多行公式： 12345\displaystyle\left( \sum\_&#123;k=1&#125;^n a\_k b\_k \right)^2\leq\left( \sum\_&#123;k=1&#125;^n a\_k^2 \right)\left( \sum\_&#123;k=1&#125;^n b\_k^2 \right) 123456789\displaystyle \frac&#123;1&#125;&#123; \Bigl(\sqrt&#123;\phi \sqrt&#123;5&#125;&#125;-\phi\Bigr) e^&#123; \frac25 \pi&#125;&#125; = 1+\frac&#123;e^&#123;-2\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-4\pi&#125;&#125; &#123; 1+\frac&#123;e^&#123;-6\pi&#125;&#125; &#123;1+\frac&#123;e^&#123;-8\pi&#125;&#125; &#123;1+\cdots&#125; &#125; &#125; &#125; 123f(x) = \int_&#123;-\infty&#125;^\infty \hat f(\xi)\,e^&#123;2 \pi i \xi x&#125; \,d\xi 分页符 Page break Print Test: Ctrl + P [========] 绘制流程图 Flowchart12345678st=&gt;start: 用户登陆op=&gt;operation: 登陆操作cond=&gt;condition: 登陆成功 Yes or No?e=&gt;end: 进入后台st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op [========] 绘制序列图 Sequence Diagram1234Andrew-&gt;China: Says HelloNote right of China: China thinks\nabout itChina--&gt;Andrew: How are you?Andrew-&gt;&gt;China: I am good thanks! End]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fmyblog.github.io%2F2019%2F09%2F17%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
